services:
  calendar:
    build:
      context: .
      dockerfile: ./build/calendar/Dockerfile
    ports:
      - "8080:8080"
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  scheduler:
    build:
      context: .
      dockerfile: ./build/scheduler/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true
      postgres:
        condition: service_healthy
        restart: true

  sender:
    build:
      context: .
      dockerfile: ./build/sender/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
        restart: true

  migrations:
    command: "./migrate postgres \"postgres://calendar:calendar@postgres:5432/calendar\" up"
    build:
      context: .
      dockerfile: ./build/migrations/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  rabbitmq:
    image: "rabbitmq:latest"
    expose:
      - 5672
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_USER: calendar
      POSTGRES_PASSWORD: calendar
      POSTGRES_DB: calendar
      ALLOW_IP_RANGE: 0.0.0.0/0
    volumes:
      - ./etc/postgres-data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-d",
          "calendar",
          "-U",
          "calendar"
        ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
